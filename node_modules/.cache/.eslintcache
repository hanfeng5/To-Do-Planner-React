[{"/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/index.js":"1","/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/App.js":"2","/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/Todo.js":"3","/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/FilterButton.js":"4","/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/Form.js":"5"},{"size":685,"mtime":1678338181303,"results":"6","hashOfConfig":"7"},{"size":2663,"mtime":1679016707578,"results":"8","hashOfConfig":"7"},{"size":887,"mtime":1679016765904,"results":"9","hashOfConfig":"7"},{"size":326,"mtime":1678305896423,"results":"10","hashOfConfig":"7"},{"size":954,"mtime":1679011835586,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13zfkw6",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/index.js",[],[],"/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/App.js",["28"],[],"// import './App.css';\nimport React, { useState } from \"react\"\nimport \"./index.css\";\nimport Todo from \"./components/Todo\"\n// import FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\"\nimport { nanoid } from \"nanoid\"\n\n\n\nfunction App(props) {\n\n  const [tasks, setTask] = useState(props.tasks);\n\n\n  function addTask(name) {\n    const newTask = {id: `todo-${nanoid()}`, name, completed:false}\n    setTask([...tasks, newTask]);\n  }\nconsole.log(tasks)\n\n  const taskList = tasks.map((task) => (\n  <Todo \n    id={task.id} \n    name={task.name} \n    completed={task.completed} \n    key={task.id} \n    toggleTaskComplete = {toggleTaskComplete}\n    deleteTask = {deleteTask}\n    // editTask = {editTask}\n    />\n));\n\n\n// let remaining\nconst task_noun = taskList.length !== 1 && taskList.length !==0? \"tasks\" : \"task\" //does it not equal to 1 or 0? if yes do tasks, otherwise do task\n//let task_number = countComplete();\nconst task_remain = `${taskList.length} ${task_noun} remaining`\n// const task_noun = task_number !== 1 && task_number !==0? \"tasks\" : \"task\" //does it not equal to 1 or 0? if yes do tasks, otherwise do task\n// let task_remain = `${task_number} ${task_noun} remaining`\n\n\n\nconst allDone = taskList.length === 0? \"Good job! All done!\" : undefined\n//const allDone = task_number === 0? \"Good job! All done!\" : undefined\n\n\n\nfunction toggleTaskComplete(id) {\n  const updatedTasks = tasks.map ((task) => {\n    if (id === task.id) {\n      return {...task, completed : !task.completed}\n    }\n    // console.log(remaining)\n    return task;\n  })\n  setTask(updatedTasks);\n}\n\n// function countComplete () {\n//    remaining = 0;\n//    tasks.forEach(task => {\n//     if (!task.completed) {\n//       remaining += 1;\n//     }\n//    })\n//    return remaining;\n\n// }\n\nfunction deleteTask (id) {\n  const remaining_task = tasks.filter((task) => id !== task.id);\n  setTask(remaining_task);\n}\n\n// function editTask (id, newName) {\n//   const editedTask = tasks.map((task) => {\n//     if (task.id === id) {\n//       return {...task, name: newName}\n//     }\n//     return task;\n//   })\n//   setTask(editedTask);\n// }\n\nreturn (\n<div className=\"todoapp stack-large\">\n  <h1>To-Do-Planner!</h1>\n  <Form addTask={addTask}></Form>\n  {/* <div className=\"filters btn-group stack-exception\">\n    <FilterButton></FilterButton>\n    <FilterButton></FilterButton>\n    <FilterButton></FilterButton>\n  </div> */}\n  <h2 id=\"list-heading\">{task_remain}</h2>\n  <h2 id=\"list-heading\">{allDone}</h2>\n  <ul\n    role=\"list\"\n    className=\"todo-list stack-large stack-exception\"\n    aria-labelledby=\"list-heading\">\n      {taskList}\n  </ul>\n</div>\n)\n}\n\nexport default App;\n","/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/Todo.js",[],[],"/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/FilterButton.js",[],[],"/Users/hanfeng/Library/CloudStorage/OneDrive-UW/School/Senior/HCDE 438/To-Do-Planner-React/src/components/Form.js",[],[],{"ruleId":"29","severity":1,"message":"30","line":97,"column":3,"nodeType":"31","endLine":100,"endColumn":36},"jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement"]